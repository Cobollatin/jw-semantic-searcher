name: Azure Batch CI/CD
run-name: "Azure Batch CI/CD for commit ${{ github.sha }}"
on:
    workflow_dispatch:
    push:
        branches:
            - main
        paths:
            - "indexer/**"
            - ".github/workflows/batch_pipeline.yaml"
    pull_request:
        types: [opened, synchronize, reopened, closed]
        branches:
            - main
        paths:
            - "indexer/**"
            - ".github/workflows/batch_pipeline.yaml"
permissions:
    contents: read
    id-token: write
    packages: read
env:
    IMAGE_NAME: "indexer"
    IMAGE_TAG: ${{ github.sha }}
jobs:
    indexer_ci:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        steps:
            - uses: actions/checkout@v4.1.4
            - name: "Do nothing"
              run: echo "Doing nothing for now"
    buildImage:
        runs-on: ubuntu-latest
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.ref == 'refs/heads/main')
        steps:
            - uses: actions/checkout@v4.1.4
            - uses: azure/login@v2.1.0
              name: Azure login
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Build and push image to ACR
              run: az acr build --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --image ${{ env.IMAGE_NAME }}:latest --registry ${{ secrets.AZURE_CONTAINER_REGISTRY }} -g ${{ secrets.ACR_RESOURCE_GROUP }} -f ./indexer/Dockerfile ./indexer
    deploy:
        runs-on: ubuntu-latest
        needs: buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v2.1.0
              name: Azure login
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Creates Batch Task Configuration
              env:
                  #   COMMAND_LINE: docker run ${{ secrets.AZURE_CONTAINER_REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:latest && docker logs $(docker ps -lq)
                  COMMAND_LINE: ls -al /output/
              run: |
                  echo "{
                            \"id\": \"${{ github.sha }}\",
                            \"displayName\": \"Indexer Task for commit ${{ github.sha }}\",
                            \"commandLine\": \"${{env.COMMAND_LINE}}\",
                            \"containerSettings\": {
                                \"imageName\": \"${{ secrets.AZURE_CONTAINER_REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:latest\",
                                \"containerRunOptions\": \"--log-driver local --log-opt max-size=10m\"
                            },
                            \"OutputFiles\": [
                                {
                                    \"filePattern\": \"/output/**/*.txt\",
                                    \"destination\": {
                                        \"container\": {
                                            \"containerUrl\": \"${{ secrets.AZURE_STORAGE_CONTAINER_URL }}\",
                                            \"path\": \"logs\",
                                            \"identityReference\": {
                                                \"resourceId\": \"${{ secrets.BATCH_POOL_IDENTITY_ID }}\",
                                            }
                                        }
                                    },
                                    \"uploadOptions\": {
                                        \"uploadCondition\": \"taskCompletion\"
                                    }
                                }
                            ],
                            \"UserIdentity\": {
                                \"autoUser\": {
                                    \"scope\": \"Task\",
                                    \"elevationLevel\": \"admin\"
                                }
                            },
                        }" > task.json
            - name: Deploy to Azure Batch
              uses: azure/CLI@v2.0.0
              env:
                  AZURE_BATCH_ENDPOINT: ${{ secrets.BATCH_ACCOUNT_ENDPOINT }}
                  AZURE_BATCH_ACCESS_KEY: ${{ secrets.BATCH_ACCOUNT_KEY }}
                  AZURE_BATCH_ACCOUNT: ${{ secrets.BATCH_ACCOUNT_NAME }}
              with:
                  azcliversion: "2.59.0"
                  inlineScript: |
                      az batch task create --job-id ${{ secrets.BATCH_JOB_ID }} --json-file task.json
